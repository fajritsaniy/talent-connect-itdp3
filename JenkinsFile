pipeline {
    agent any
    environment {
        GIT_URL = "https://github.com/fajritsaniy/talent-connect-itdp3.git"
        BRANCH = "master"
        ROBOT = "/home/user/.local/bin/robot"
        CHANNEL = "#jenkins"
        IMAGE = "my-robot-test"
        CONTAINER = "my-robot-test-app"
        DOCKER_APP = "docker"
        EMAIL_RECIPIENT = 'fajri2723@gmail.com'
    }
    stages{
        // For Docker Clean up
        stage("Cleaning Up") {
            steps {
                echo "Cleaning up"
                sh "${DOCKER_APP} rm -f ${CONTAINER} || true"
            }
        }
        stage("Clone") {
            steps {
                echo "Clone"
                git branch: "${BRANCH}", url: "${GIT_URL}"
            }
        }
        stage("Run"){
            steps {
                echo "Run Test"
                sh "${DOCKER_APP} run --rm --shm-size=1g -e BROWSER=chrome -v $WORKSPACE/Tests/web-version:/opt/robotframework/tests:Z -v $WORKSPACE/Results:/opt/robotframework/reports:Z ppodgorsek/robot-framework:latest"
            }
        }
    }
    post {
        always {
            echo 'This will always run'
            postNotify(currentBuild.result)
        }
    }
}

def postNotify(buildStatus) {
    notifyEmail(buildStatus)
}

def notifyEmail(buildStatus) {
    def subject
    def body

    if (buildStatus == 'SUCCESS') {
        subject = "Build Successful"
        body = "The build has succeeded."
    } else {
        subject = "Build Failed"
        body = "The build has failed."
    }

    emailext body: body, subject: subject, to: "${EMAIL_RECIPIENT}"
}